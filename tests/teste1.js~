var canvas;
var context;

var x;
var y; 
var vx,vx,ax,ay;

var ipx = -1;
var ipy = -1;
var fpx = -1;
var fpy = -1;

var dragging = false;
var date = new Date();
var time = date.getTime();

var oldfpx, oldfpy;
var deltaX, deltaY;
var array = [];

var numObjs = 10;
window.onload = function() {
    canvas = document.getElementById('myCanvas');
    context = canvas.getContext('2d');
    setInterval(function() { 
	var timeElapsed = (new Date().getTime() - time)/ 1000;
	time = new Date().getTime();

	update(timeElapsed);
	draw(context);
    },1000/60);

    x = 0;
    y = canvas.height - 100;
    vx = 100;
    vy = 100;
    ax = 0;
    ay = -196; 
    
    canvas.onmousedown = function() { 
	dragging = true;  
	ipx = event.clientX; 
	ipy = event.clientY; 
	fpx = ipx;
	fpy = ipy;
	oldfpx = fpx;
	oldfpy = fpy;
    };

    canvas.onmousemove = function() {
	if(dragging) {
	    fpx = event.clientX;
	    fpy = event.clientY;
	}
    }

    canvas.onmouseup = function() {
	dragging = false;
	ipx = -1;
	ipy = -1;
	x = fpx;
	y = fpy;
	vx = deltaX;
	vy = -deltaY;
	fpx = -1;
	fpy = -1;
	console.log(x,y,vx,vy,ax,ay);
    }
    for(var c = 0; c < numObjs; c++) {
	array[c] = {
	    x:canvas.width / 2, 
	    y:canvas.height - 20, 
	    vx: Math.floor(Math.random()*100) - 50,
	    vy: Math.floor(Math.random()*200)
	}
    }
    console.log(array);
    update(0.033);
    console.log(array);
};
function update(timeElapsed) {
    for(var c = 0; c < numObjs; c++) {
	var a = array[c];
	a.vx = a.vx + ax * timeElapsed;
	a.vy = a.vy + ay * timeElapsed;
	
	a.x = a.x + vx * timeElapsed;
	a.y = a.y - vy * timeElapsed;
    }


   if(dragging) {
	console.log(fpx - oldfpx, fpy - oldfpy);
	deltaX = fpx - oldfpx;
	deltaY = fpy - oldfpy;
	oldfpx = fpx;
	oldfpy = fpy;
    }
}
function draw(context) {
    context.clearRect(0,0,canvas.width,canvas.height);

    if(ipx > 0 && ipy > 0) {
	context.beginPath();
	context.moveTo(ipx,ipy);
	context.lineTo(fpx, fpy);
	context.closePath();
	context.stroke();
    }
    context.fillStyle = 'rgba(50,100,50,.5)';
    for(var c = 0; c < numObjs; c++) {
	context.fillRect(array[c].x,array[c].y,100,100);
    }
}
